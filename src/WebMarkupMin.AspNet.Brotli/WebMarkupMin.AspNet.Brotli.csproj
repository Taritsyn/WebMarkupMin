<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <Product>Web Markup Minifier: Brotli for ASP.NET</Product>
    <VersionPrefix>2.18.0</VersionPrefix>
    <TargetFrameworks>net40;net45;netstandard1.3;netstandard2.0;netstandard2.1;net9.0</TargetFrameworks>
    <OutputType>Library</OutputType>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <NoWarn>$(NoWarn);CS1591;NETSDK1215;NU1903</NoWarn>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <DisableDefaultResxToCsConversionTarget>true</DisableDefaultResxToCsConversionTarget>
  </PropertyGroup>

  <Import Project="../../build/common.props" />
  <Import Project="../../build/strong-name-signing.props" />
  <Import Project="../../build/nuget-common.props" />

  <PropertyGroup>
    <Description>WebMarkupMin.AspNet.Brotli contains one compressor-adapter for compression of text content by using the Brotli algorithm - `BrotliCompressor`. `BrotliCompressor` is based on the BrotliSharpLib.</Description>
    <PackageTags>WebMarkupMin;ASP.NET;Compression;Brotli</PackageTags>
    <PackageReleaseNotes>1. Added support for .NET 9;
2. Removed a .NET 6 and .NET 7 targets;
3. In compression settings was changed a default value of the `Level` property from `5` to `4`.</PackageReleaseNotes>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="ResxToCs.MSBuild" Version="1.0.0-alpha7" PrivateAssets="All" />

    <ProjectReference Include="../WebMarkupMin.AspNet.Common/WebMarkupMin.AspNet.Common.csproj" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net40' Or '$(TargetFramework)' == 'net45' Or '$(TargetFramework)' == 'netstandard1.3' Or '$(TargetFramework)' == 'netstandard2.0' ">
    <PackageReference Include="BrotliSharpLib" Version="0.3.3" />
  </ItemGroup>

  <ItemGroup>
    <None Include="../../licenses/brotli-sharp-lib-license.txt" PackagePath="/" Pack="true" Visible="false" />
    <None Include="../../licenses/brotli-license.txt" PackagePath="/" Pack="true" Visible="false" />
  </ItemGroup>

  <Target Name="ConvertResxToCs" BeforeTargets="BeforeCompile">
    <ResxToCsTask
      InputDirectory="./Resources/"
      Namespace="$(RootNamespace).Resources"
      InternalAccessModifier="true" />
  </Target>

</Project>
